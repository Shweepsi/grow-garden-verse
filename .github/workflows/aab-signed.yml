name: Build Signed Android AAB & APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      # Cache Node Modules
      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache Gradle (Ã©tendu)
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/daemon
            ~/.gradle/native
            android/.gradle
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # Cache du build Android
      - name: Cache Android Build
        uses: actions/cache@v3
        with:
          path: android/app/build
          key: android-build-${{ runner.os }}-${{ github.ref_name }}
          restore-keys: |
            android-build-${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Build web assets
        run: npm run build

      - name: Install Capacitor & Android
        run: npm install @capacitor/cli@5.7.8 @capacitor/android@5.7.8 --legacy-peer-deps

      - name: Sync versions
        run: node scripts/sync-versions.js

      - name: Capacitor sync
        run: npx cap sync

      - name: Decode keystore
        run: |
          mkdir -p android/app
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 -d > android/app/my-release-key.keystore

      # Build AAB optimisÃ©
      - name: Build signed AAB
        run: |
          cd android
          ./gradlew bundleRelease --parallel --daemon --build-cache
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      # Build APK optimisÃ©
      - name: Build signed APK
        run: |
          cd android
          ./gradlew assembleRelease --parallel --daemon --build-cache
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      - name: Move AAB and APK to builds directory
        run: |
          mkdir -p builds
          mv android/app/build/outputs/bundle/release/app-release.aab builds/IdleGrow.aab
          mv android/app/build/outputs/apk/release/app-release.apk builds/IdleGrow.apk

      # GÃ©nÃ©rer un tag basÃ© sur la version du package
      - name: Tag commit
        run: |
          VERSION=$(node -p "require('./package.json').version")
          TAG_NAME="v${VERSION}-build${{ github.run_number }}"
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag "$TAG_NAME" -f
          git push origin "$TAG_NAME" -f
          echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Upload vers la release
      - name: Upload AAB and APK to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG_NAME }}
          name: "Version ${{ env.VERSION }} - Build ${{ github.run_number }}"
          body: |
            ðŸš€ Version ${{ env.VERSION }}
            ðŸ“¦ Build #${{ github.run_number }}
            ðŸ“… Date: ${{ github.event.head_commit.timestamp }}
            
            ### Fichiers
            - `IdleGrow.aab` - Pour Google Play Store
            - `IdleGrow.apk` - Pour installation directe
          files: |
            builds/IdleGrow.aab
            builds/IdleGrow.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}